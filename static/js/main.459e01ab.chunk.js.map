{"version":3,"sources":["images/github.svg","images/linkedin.svg","images sync /^/.//.*$","images/github-logo.svg","images/img.0.png","images/img.1.png","images/img.2.png","images/img.3.png","images/img.4.png","images/img.5.png","images/img.6.png","images/img.7.png","images/img.8 copy.png","images/img.8.png","images/img.png","images/linkedin-logo-button.svg","images/speech-form.png","images/speech-recognition-form.png","images/speechToText.png","images/text-delimiter.png","images/textToSpeech.png","images/tic-tac-toe.png","components/Header/Header.js","components/Projects/Project/Project.js","components/Projects/Projects.js","containers/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./github-logo.svg","./github.svg","./img.0.png","./img.1.png","./img.2.png","./img.3.png","./img.4.png","./img.5.png","./img.6.png","./img.7.png","./img.8 copy.png","./img.8.png","./img.png","./linkedin-logo-button.svg","./linkedin.svg","./speech-form.png","./speech-recognition-form.png","./speechToText.png","./text-delimiter.png","./textToSpeech.png","./tic-tac-toe.png","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","Header","props","react_default","a","createElement","className","href","target","rel","style","color","src","githubLogo","alt","linkedInLogo","Project","require","projectData","img_src","width","height","minHeight","name","description","demo","Projects","projects","length","item","Projects_Project_Project","key","Layout","_useState","useState","_useState2","slicedToArray","setProjectData","useEffect","data","components_Header_Header","components_Projects_Projects","App","containers_Layout_Layout","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.459e01ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.c671b6f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.7a8c3e6f.svg\";","var map = {\n\t\"./github-logo.svg\": 22,\n\t\"./github.svg\": 1,\n\t\"./img.0.png\": 23,\n\t\"./img.1.png\": 24,\n\t\"./img.2.png\": 25,\n\t\"./img.3.png\": 26,\n\t\"./img.4.png\": 27,\n\t\"./img.5.png\": 28,\n\t\"./img.6.png\": 29,\n\t\"./img.7.png\": 30,\n\t\"./img.8 copy.png\": 31,\n\t\"./img.8.png\": 32,\n\t\"./img.png\": 33,\n\t\"./linkedin-logo-button.svg\": 34,\n\t\"./linkedin.svg\": 2,\n\t\"./speech-form.png\": 35,\n\t\"./speech-recognition-form.png\": 36,\n\t\"./speechToText.png\": 37,\n\t\"./text-delimiter.png\": 38,\n\t\"./textToSpeech.png\": 39,\n\t\"./tic-tac-toe.png\": 40\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","module.exports = __webpack_public_path__ + \"static/media/github-logo.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/img.0.651eac76.png\";","module.exports = __webpack_public_path__ + \"static/media/img.1.3457ee47.png\";","module.exports = __webpack_public_path__ + \"static/media/img.2.02c5d800.png\";","module.exports = __webpack_public_path__ + \"static/media/img.3.00c1f6f2.png\";","module.exports = __webpack_public_path__ + \"static/media/img.4.89a412cb.png\";","module.exports = __webpack_public_path__ + \"static/media/img.5.67a17704.png\";","module.exports = __webpack_public_path__ + \"static/media/img.6.caa0e9ea.png\";","module.exports = __webpack_public_path__ + \"static/media/img.7.da719c61.png\";","module.exports = __webpack_public_path__ + \"static/media/img.8 copy.9a434e19.png\";","module.exports = __webpack_public_path__ + \"static/media/img.8.f5eb907a.png\";","module.exports = __webpack_public_path__ + \"static/media/img.9a434e19.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-logo-button.1fe3be0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/speech-form.98b4fe18.png\";","module.exports = __webpack_public_path__ + \"static/media/speech-recognition-form.03ae6d66.png\";","module.exports = __webpack_public_path__ + \"static/media/speechToText.365f783d.png\";","module.exports = __webpack_public_path__ + \"static/media/text-delimiter.ee8bf175.png\";","module.exports = __webpack_public_path__ + \"static/media/textToSpeech.613a162f.png\";","module.exports = __webpack_public_path__ + \"static/media/tic-tac-toe.c5c72fe9.png\";","import React from 'react';\nimport githubLogo from '../../images/github.svg';\nimport linkedInLogo from '../../images/linkedin.svg';\n\nimport './Header.css';\n\nconst Header = (props) => {\n    return (\n        <div className=\"header w-100 text-center pt-4\">\n            <h1>Rk Bhambri</h1>\n            <h3 className=\"text-center\">Front End Developer</h3>\n            <div className=\"social-icons text-center pb-3\">\n                <span className=\"p-2\">\n                    <a href=\"https://github.com/rkbhambri\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#777' }}>\n                        <img className=\"github-logo\" src={githubLogo} alt=\"Rk Bhambri\" />\n                    </a>\n                </span>\n                <span className=\"p-2\">\n                    <a href=\"https://www.linkedin.com/in/rk-bhambri-462778116\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#777' }}>\n                        <img className=\"linkedIn-logo\" src={linkedInLogo} alt=\"Rk Bhambri\" />\n                    </a>\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Project.css';\nconst Project = (props) => {\n    return (\n        <div className=\"projects-item col-lg-3 col-md-3 col-sm-12 col-xs-11 offset-1 mt-4\">\n            <div className=\"project-image\">\n                <img src={require('../../../images/' + props.projectData.img_src)} style={{ width: '100%', height: '220px' }} alt=\"Rk Bhambri\" />\n            </div>\n            <div className=\"project-details p-3\" style={{ minHeight: '200px' }}>\n                <div className=\"project-name\">{props.projectData.name}</div>\n                <div className=\"project-description\">{props.projectData.description}</div>\n            </div>\n            <div className=\"footer text-right p-2 w-100\">\n                <span className=\"demo p-2\">\n                    <a href={props.projectData.demo} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#777' }}>Demo</a>\n                </span>\n                <span className=\"code p-2\">\n                    <a href={props.projectData.code} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#777' }}>Code</a>\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default Project;","import React from 'react';\nimport Project from './Project/Project';\n\nconst Projects = (props) => {\n    return (\n        <div className=\"projects\">\n            <div className=\"projects-list col-md-11 row mb-3\">\n                {\n                    props.projects.length > 0 && props.projects.map(item => {\n                        return <Project projectData={item} key={item.name} />;\n                    })\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Projects;","import React, { useState, useEffect } from 'react';\nimport data from '../../data.json';\nimport Header from '../../components/Header/Header';\nimport Projects from '../../components/Projects/Projects';\n\nconst Layout = (props) => {\n    const [projects, setProjectData] = useState([]);\n\n    useEffect(() => {\n        setProjectData(data.projects);\n    }, []);\n\n    return (\n        <div className=\"layout w-100\">\n            <Header />\n            <Projects projects={projects} />\n        </div>\n    );\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport Layout from './containers/Layout/Layout';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Layout />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}